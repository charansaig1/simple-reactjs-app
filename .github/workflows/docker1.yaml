name: Build Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js (for building the React app)
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Build Docker image
      - name: Build a Docker image
        run: |
          docker build -t docker1img:vi2 .

      - name: List Docker images
        run: docker images

      # Step 4: Get Docker image ID
      - name: Get Docker image ID
        id: image_id
        run: |
          IMAGE_ID=$(docker images -q docker1img:vi2)
          echo "IMAGE_ID=${IMAGE_ID}"
          echo "IMAGE_ID=${IMAGE_ID}" >> $GITHUB_ENV
          echo "::set-output name=IMAGE_ID::$IMAGE_ID"

      # Step 5: Create Docker container using the port from the .env file
      - name: Create Docker container
        run: |
          # Load .env file
          set -a
          source .env
          set +a

          echo "Using APP_PORT=${APP_PORT} from .env file"
          echo "Using IMAGE_ID=${{ steps.image_id.outputs.IMAGE_ID }}"

          # Ensure IMAGE_ID is set
          if [[ -z "${{ steps.image_id.outputs.IMAGE_ID }}" ]]; then
            echo "Error: IMAGE_ID is empty!"
            exit 1
          fi

          # Run the container with the correct port mapping
          docker run -d --name simpleRectjs -p ${APP_PORT}:${APP_PORT} ${{ steps.image_id.outputs.IMAGE_ID }}
          docker ps -a

      - name: Stop Docker container
        run: docker stop simpleRectjs
